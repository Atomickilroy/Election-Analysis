from re import I


print("Hello World")

type(3)



my_list=(['Arapahoe', 'Denver','Jefferson'])

countries = my_list


#Add El Paso to the second position in the list. 

countries.insert(3,"El Paso")

#'Remove Arapahoe from the list. 

countries.pop(0)

#'Make Denver the third item in the list, but keep Jefferson the second item in the list.  

countries[0]="El Paso"

countries[2]="Denver"

#'Add Arapahoe to the list. 

countries.append("Arapahoe")



print(countries)

countries_dict={}

countries_dict["Aropahoe"]=422829

countries_dict["Denver"]=463353

countries_dict["Jefferson"]=432438

len(countries_dict)

countries_dict.items()


print(countries_dict)

voting_data=[]

voting_data.append({"county":"Aropahoe","registered_voters" : 422829})

voting_data.append({"county":"Denver","registered_voters": 463353})

voting_data.append({"county":"Jefferson","registered_voters": 432438})

len(voting_data)

voting_data.pop(0)

voting_data.insert(0, ({"county":"El Paso","registered_voters": 461149}))

voting_data.pop(1)

voting_data.insert(2,({"county":"Denver","registered_voters": 463353}))

voting_data.append({"county":"Aropohe","registered_voters": 422829})

print(voting_data)

countries = ["Arapahoe","Denver","Jefferson"]

if countries[1] == 'Denver':

    print(countries[1])

#Membership Operator
#3.2.9

countries = ["Arapahoe","Denver","Jefferson"]
if "El Paso" in countries:
    print("El Paso is in the list of counties.")
else:
    print("El Paso is not the list of counties.")

if "Arapahoe" in countries and "El Paso" not in countries:
   print("Only Arapahoe is in the list of counties.")
else:
    print("Arapahoe is in the list of counties and El Paso is not in the list of counties.")

for countries in countries:
    print(countries)

#Python has a built-in function, range()

for i in range(len(countries)):
    print(countries[i])

#keys from a dictionary using a for
for countries in countries_dict:
    print(countries)

for county in countries_dict.keys():
    print(countries)

#SKILL DRILL ^^^
# Print each county from the counties dictionary using the keys() method.

for county, registered_voters in countries_dict.items():
    print(county,"county has", registered_voters,"registered voters")





voting_data = [{county:"Arapahoe", "registered_voters": 422829},
                {county:"Denver", "registered_voters": 463353},
                {county:"Jefferson", "registered_voters": 432438}]

for county in voting_data or county in countries_dict:
    print(countries)


for county in voting_data:
    for value in countries_dict.values():
        print(value) 

        #Arapahoe
        #422829
        #Denver
        #463353
        #Jefferson
        #432438


#When we execute the code, each dictionary is printed on a 
# separate line:

for country in voting_data:

     print(countries_dict['registered_voters'])


#If we only want to print the county name from each dictionary,
# we can use county_dict['county'] in the print statement for the for loop.

for country in voting_data:
    print(countries_dict['county'])

    #Arapahoe
    #Denver
    #Jeffereson


my_votes=int(input("How many votes did you get in the election?"))

total_votes=int(input("what is the total votes in the election?"))



print(f"I recieved {my_votes/ total_votes *100}%of the total votes")


#

for county, registered_voters in countries_dict.items():

    print(f"{county} county has {registered_voters} registered voters.")




#Multiline F-Strings

candidate_votes = int(input("How many votes did the candidate get in the election? "))

total_votes = int(input("What is the total number of votes in the election? "))

message_to_candidate = (

    f"You received {candidate_votes:,} number of votes. "

    f"The total number of votes in the election was {total_votes:,}. "

    f"You received {candidate_votes / total_votes * 100:.2f}% of the total votes.")

print(message_to_candidate)

#Format Floating-Point Decimals

#f'{value:{width}.{precision}


#Skill Drill 3.2.11

for county, registered_voters in countries_dict.items():
    print(f"{county} county has {registered_voters:,} registered voters.")

#Skill Drill 2? 3.2.11
